% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gpsFISH_optimize.R
\name{fitness}
\alias{fitness}
\title{Fitness function for evaluating the fitness of each gene panel}
\usage{
fitness(
  string,
  full_count_table,
  cell_cluster_conversion,
  nCV,
  rate = 1,
  cluster_size_max = 1000,
  cluster_size_min = 1,
  two_step_sampling_type,
  metric = "Accuracy",
  method = "NaiveBayes",
  weight_penalty = NULL,
  simulation_parameter,
  simulation_model = "ZINB",
  relative_prop = NULL,
  sample_new_levels = NULL,
  use_average_cluster_profiles = FALSE
)
}
\arguments{
\item{string}{A numeric vector containing the gene panel.}

\item{full_count_table}{A data frame containing the expression level of each gene in each cell with gene name as column name and cell name as row name.}

\item{cell_cluster_conversion}{A data frame with each row representing information of one cell.
First column contains the cell name. Second column contains the corresponding cell type name. Row name of the data frame should be the cell name.}

\item{nCV}{Number of cross validation.}

\item{rate}{A value between 0 and 1 specifying the proportion of cells we want to keep for each cell type during subsampling. 0.8 means we keep 80\% of cells for each cell type. Default is 1.}

\item{cluster_size_max}{Maximum number of cells to keep for each cell type during subsampling. Default is 1000.}

\item{cluster_size_min}{Minimum number of cells to keep for each cell type during subsampling. Default is 1.}

\item{two_step_sampling_type}{A character vector with two values indicating the subsampling and simulation methods to use.
For the first value, there are two options. "Subsampling_by_cluster" means subsampling cells from each cell type separately. "Subsampling" means subsampling all cells together by mixing cells from all cell types.
For the second value, there are two options. "Simulation" corresponds to simulation using pre-trained Bayesian model which accounts for platform effects. "No_simulation" means no simulation is performed.}

\item{metric}{A character specifying the metric to use for evaluating the gene panel's classification performance.
Default is "Accuracy", which is the overall accuracy of classification.
The other options is "Kappa", which is the Kappa statistics.}

\item{method}{A character specifying the classification method to use. Default is naive Bayes ("NaiveBayes"). The other option is random forest ("RandomForest").}

\item{weight_penalty}{Optional. A weighted penalty matrix specifying the partial credit and extra penalty for correct and incorrect classifications between pairs of cell types.
It should be a square matrix with cell types as both row and column name. Default is NULL.}

\item{simulation_parameter}{A simulation model returned by simulation_training_ZINB_trim.}

\item{simulation_model}{A character specifying the type of simulation model. Default is the Bayesian model ("ZINB").}

\item{relative_prop}{A list with two elements:
\itemize{
\item "cluster.average": A matrix containing the relative expression of each gene in each cell type with gene name as row name and cell type name as column name.
The denominator for relative expression calculation needs to be all genes in the transcriptome before filtering out lowly expressed genes.
\item "cell.level": A matrix containing the relative expression of each gene in each cell with gene name as row name and cell name as column name.
The denominator for relative expression calculation needs to be all genes in the transcriptome before filtering out lowly expressed genes.
}}

\item{sample_new_levels}{A character specifying how simulation is performed for genes we have observed in the data used to train the Bayesian model.
Specifically, during the training of the Bayesian model, we have estimations of the platform effect for genes in the training data.
When we simulate spatial transcriptomics data for genes we have already seen in the training data,
we can use their estimated platform effect \eqn{\gamma_i} and \eqn{c_i} ("old_levels"), or we can randomly sample \eqn{\gamma_i} and \eqn{c_i} from their posterior distribution ("random").
For genes not in the training data, we will randomly sample \eqn{\gamma_i} and \eqn{c_i} from their posterior distribution since we don't have their estimation.}

\item{use_average_cluster_profiles}{A logical value indicating if we want to use relative expression per cell type as the relative expression input for simulating spatial transcriptomics data.
If TRUE, then value in \code{relative_prop$cluster.average} is used. And for each gene, cells from the same cell type will have the same value.
If FALSE, then we use the relative expression per cell as input, i.e., \code{relative_prop$cell.level}.
Default is FALSE.}
}
\value{
A list with elements:
\item{fitness_value}{Average fitness value of the current gene panel over cross validations.}
\item{confusionMatrix}{Average confusion matrix of the current gene panel over cross validations.}
\item{norm.confusionMatrix}{Average normalized confusion matrix of the current gene panel over cross validations.}
\item{stats_by_class}{Average classification statistics of the current gene panel over cross validations.}
\item{pred_prob}{Average predicted probability of each cell based on the current gene panel over cross validations.}
\item{AUC_by_class}{Average AUC per cell type of the current gene panel over cross validations.}
}
\description{
Fitness function for evaluating the fitness of each gene panel
}
