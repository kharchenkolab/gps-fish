% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{initialize_population}
\alias{initialize_population}
\title{Initialize population for genetic algorithm based on differential gene expression}
\usage{
initialize_population(
  pop.size,
  panel.size,
  diff_expr_result,
  diff_metric,
  diff_metric_cutoff,
  gene.list,
  gene2include = NULL
)
}
\arguments{
\item{pop.size}{Size of the population, i.e., the number of gene panels to initialize}

\item{panel.size}{Size of a gene panel, i.e., the number of genes in a gene panel}

\item{diff_expr_result}{A list containing the differential expression result. Each slot in the list contains a data frame corresponding to differentially expressed genes in one cell type.
Within each data frame, each row is one gene. Columns contain differential expression statistics of a gene, e.g., "AUC", "z-score", "precision", etc.}

\item{diff_metric}{A character specifying the metric used to select significant differentially expressed genes. Needs to be one of the column names of the data frame in \code{diff_expr_result}, e.g., "AUC".}

\item{diff_metric_cutoff}{A numeric value representing the significance cutoff for differential expression.}

\item{gene.list}{A character vector of all candidate genes used to initialize the population}

\item{gene2include}{A character vector of genes that must be included in each panel of the population. Default is NULL}
}
\value{
A matrix with each row representing one gene panel and each column representing one gene in a gene panel.
The genes are encoded by their location in \code{gene.list}
}
\description{
initialize_population initializes a population for genetic algorithm optimization using information from differential expression analysis.
The idea is that for each gene panel, we include significantlly differentially expressed genes of each cell type (if there is any).
Detailed information of how each gene panel is initialized can be found by \code{?initialize_solution}.
}
\examples{
data(sc_count)
data(sc_cluster)

gene2include.symbol = sample(rownames(sc_count), 20)

#adjust variance
sc_count.adjust_variance = preprocess_normalize(sc_count, n.core = 2)

#run differential expression
diff_expr = diff_gene_cluster(pagoda_object = sc_count.adjust_variance$pagoda.object,
                              cell_cluster_conversion = sc_cluster, n.core = 1)

initpop.DE=initialize_population(pop.size = 100,
                                 panel.size = 200,
                                 diff_expr_result = diff_expr$diff_result,
                                 diff_metric = "AUC",
                                 diff_metric_cutoff = 0.7,
                                 gene.list = rownames(sc_count),
                                 gene2include = gene2include.symbol)

head(initpop.DE)
}
